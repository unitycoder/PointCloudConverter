# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2022

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install 7Zip PowerShell Module
        shell: powershell
        run: |
          # cancel early, if not build commit
          $strVal ='${{ github.event.commits[0].message }}'
          if($strVal -clike '*#BUILD*') 
          {
                Write-Host 'True'
          } else {
                Write-Host 'False'
                exit(1)
          }
          Install-Module 7Zip4PowerShell -Force -Verbose 

      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup .NET 8.0 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      - name: Restore NuGet packages
        run: dotnet restore PointCloudConverter.sln
      
      - name: Build Binary
        run: dotnet build PointCloudConverter.sln --configuration Release --no-restore
      
      - name: Build Artifact
        shell: cmd
        run: call .\ArtifactBuild.cmd      
       
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{github.run_number}}
          release_name: Release ${{github.run_number}}
          body: |
            Automated Release by GitHub Action CI
            
            ${{ join(github.event.commits.*.message, '\n') }}
          draft: false
          prerelease: false     
        
      - name: List directory contents for debugging
        run: Get-ChildItem -Recurse
        shell: pwsh
        
      - name: Upload Release Asset (x64)
        id: upload-release-asset-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PointCloudConverterX64.ZIP
          asset_name: PointCloudConverterX64.ZIP
          asset_content_type: application/zip
